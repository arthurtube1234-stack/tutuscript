--// Serviços
local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Atualiza humanoid sempre que respawnar
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
end)

-- Nome do jogo
local success, gameName = pcall(function()
    return MarketplaceService:GetProductInfo(game.PlaceId).Name
end)
if not success then
    gameName = "Jogo Desconhecido"
end

-- UI - Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = gameName .. " - Tutuz Script",
    SubTitle = "by tutu",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Abas
local TabMain = Window:AddTab({ Title = "Main", Icon = "gamepad-2" })
local TabScript = Window:AddTab({ Title = "Scripts", Icon = "code" })

-- Variáveis
local currentSpeed = humanoid.WalkSpeed
local currentJump = humanoid.JumpPower
local flying = false
local flySpeed = 50
local bodyVelocity
local flyConnection
local noclip = false
local noclipConnection
local infiniteJump = false
local espEnabled = false
local hitboxEnabled = false
local killAuraEnabled = false

--================= Funções =================--

-- Fly
local function startFly()
    if flying or not rootPart then return end
    flying = true
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVelocity.Velocity = Vector3.new()
    bodyVelocity.Parent = rootPart

    flyConnection = RunService.Heartbeat:Connect(function()
        if not flying then return end
        local moveDir = Vector3.new()
        local cam = Workspace.CurrentCamera

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDir += cam.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDir -= cam.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDir -= cam.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDir += cam.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDir += Vector3.new(0,1,0) end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir -= Vector3.new(0,1,0) end

        bodyVelocity.Velocity = (moveDir.Magnitude > 0 and moveDir.Unit * flySpeed) or Vector3.new()
    end)
end

local function stopFly()
    flying = false
    if flyConnection then flyConnection:Disconnect() flyConnection = nil end
    if bodyVelocity then bodyVelocity:Destroy() bodyVelocity = nil end
end

-- NoClip
local function startNoClip()
    if noclip then return end
    noclip = true
    noclipConnection = RunService.Stepped:Connect(function()
        if character then
            for _, v in pairs(character:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide then
                    v.CanCollide = false
                end
            end
        end
    end)
end

local function stopNoClip()
    noclip = false
    if noclipConnection then noclipConnection:Disconnect() noclipConnection = nil end
end

-- Infinite Jump
UserInputService.JumpRequest:Connect(function()
    if infiniteJump and humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- TP Tool
local function createTPTool()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "TP Tool"
    tool.Parent = player.Backpack

    tool.Activated:Connect(function()
        local mouse = player:GetMouse()
        if mouse and mouse.Hit then
            character:MoveTo(mouse.Hit.p)
        end
    end)
end

-- ESP
local function enableESP()
    espEnabled = true
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local box = Instance.new("BoxHandleAdornment")
            box.Adornee = plr.Character:FindFirstChild("HumanoidRootPart")
            box.Size = Vector3.new(2, 5, 2)
            box.Color3 = Color3.fromRGB(0,255,0)
            box.Transparency = 0.5
            box.AlwaysOnTop = true
            box.Parent = plr.Character:FindFirstChild("HumanoidRootPart")
        end
    end
end

local function disableESP()
    espEnabled = false
    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            for _, v in pairs(plr.Character.HumanoidRootPart:GetChildren()) do
                if v:IsA("BoxHandleAdornment") then v:Destroy() end
            end
        end
    end
end

-- Hitbox Expander
local function toggleHitbox(state)
    hitboxEnabled = state
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("Humanoid") then
            local hum = plr.Character.Humanoid
            hum.HipHeight = state and 5 or 2
        end
    end
end

-- Kill Aura (básico)
local function killAura()
    if not killAuraEnabled then return end
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (plr.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
            local hasWeapon = character:FindFirstChildOfClass("Tool")
            if distance < 10 and hasWeapon then
                -- Simula ataque (exemplo)
                local hum = plr.Character:FindFirstChild("Humanoid")
                if hum then hum.Health = hum.Health - 5 end
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    if killAuraEnabled then killAura() end
end)

--================= UI Main =================--

-- Fly Mobile
TabMain:AddButton({
    Title = "Fly Mobile",
    Description = "Executa script de voo para mobile",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
    end
})

-- Fly PC
TabMain:AddToggle("FlyPCToggle", {
    Title = "Fly PC",
    Description = "Ativa/desativa voo no PC",
    Default = false,
    Callback = function(state) if state then startFly() else stopFly() end end
})

-- Velocidade Slider
TabMain:AddSlider("SpeedSlider", {
    Title = "Velocidade",
    Description = "Modificar a velocidade",
    Default = humanoid.WalkSpeed,
    Min = 16,
    Max = 200,
    Rounding = 1,
    Callback = function(val) humanoid.WalkSpeed = val end
})

-- Pulo Slider
TabMain:AddSlider("JumpSlider", {
    Title = "Força do Pulo",
    Description = "Modificar força do pulo",
    Default = humanoid.JumpPower,
    Min = 50,
    Max = 300,
    Rounding = 1,
    Callback = function(val) humanoid.JumpPower = val end
})

-- NoClip
TabMain:AddToggle("NoClipToggle", {
    Title = "NoClip",
    Description = "Atravessar paredes",
    Default = false,
    Callback = function(state) if state then startNoClip() else stopNoClip() end end
})

-- Infinite Jump
TabMain:AddToggle("InfJumpToggle", {
    Title = "Infinite Jump",
    Description = "Pular infinitamente",
    Default = false,
    Callback = function(state) infiniteJump = state end
})

-- TP Tool
TabMain:AddButton({
    Title = "TP Tool",
    Description = "Ferramenta para teleportar ao clicar",
    Callback = createTPTool
})

-- ESP Toggle
TabMain:AddToggle("ESPToggle", {
    Title = "ESP",
    Description = "Ativa/Desativa ESP",
    Default = false,
    Callback = function(state)
        if state then enableESP() else disableESP() end
    end
})

-- Hitbox Expander
TabMain:AddToggle("HitboxToggle", {
    Title = "Hitbox Expander",
    Description = "Aumenta hitbox dos inimigos",
    Default = false,
    Callback = toggleHitbox
})

-- Kill Aura
TabMain:AddToggle("KillAuraToggle", {
    Title = "Kill Aura",
    Description = "Ataca inimigos próximos automaticamente",
    Default = false,
    Callback = function(state) killAuraEnabled = state end
})

--================= Scripts =================--

TabScript:AddButton({
    Title = "Infinite Yield",
    Description = "Executa Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end
})
