--// Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flying = false
local flySpeed = 50
local bodyVelocity
local flyConnection
local noclip = false
local noclipConnection
local infiniteJump = false
local espEnabled = false
local hitboxEnabled = false
local killAuraEnabled = false
local hitboxSizeMultiplier = 2.5

-- Atualiza humanoid e rootPart
player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = char:WaitForChild("Humanoid")
	rootPart = char:WaitForChild("HumanoidRootPart")
end)

-- Função Fly
local function startFly()
	if flying or not rootPart then return end
	flying = true
	bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
	bodyVelocity.Velocity = Vector3.new()
	bodyVelocity.Parent = rootPart

	flyConnection = RunService.Heartbeat:Connect(function()
		if not flying then return end
		local moveDir = Vector3.new()
		local cam = workspace.CurrentCamera
		if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDir += cam.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDir -= cam.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDir -= cam.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDir += cam.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDir += Vector3.new(0,1,0) end
		if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir -= Vector3.new(0,1,0) end
		bodyVelocity.Velocity = (moveDir.Magnitude>0 and moveDir.Unit*flySpeed) or Vector3.new()
	end)
end
local function stopFly()
	flying=false
	if flyConnection then flyConnection:Disconnect() flyConnection=nil end
	if bodyVelocity then bodyVelocity:Destroy() bodyVelocity=nil end
end

-- NoClip
local function startNoClip()
	if noclip then return end
	noclip=true
	noclipConnection=RunService.Stepped:Connect(function()
		if character then
			for _,v in pairs(character:GetDescendants()) do
				if v:IsA("BasePart") then v.CanCollide=false end
			end
		end
	end)
end
local function stopNoClip()
	noclip=false
	if noclipConnection then noclipConnection:Disconnect() noclipConnection=nil end
end

-- Infinite Jump
UserInputService.JumpRequest:Connect(function()
	if infiniteJump and humanoid then
		humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)

-- TP Tool
local function createTPTool()
	local tool=Instance.new("Tool")
	tool.RequiresHandle=false
	tool.Name="TP Tool"
	tool.Parent=player.Backpack
	tool.Activated:Connect(function()
		local mouse=player:GetMouse()
		if mouse and mouse.Hit then
			character:MoveTo(mouse.Hit.Position)
		end
	end)
end

-- Hitbox Expander
local function createHitboxes(plr)
	if plr==player then return end
	if not plr.Character then return end
	local parts = {"HumanoidRootPart","Head","Torso","UpperTorso","LowerTorso"}
	for _,name in pairs(parts) do
		local part=plr.Character:FindFirstChild(name)
		if part and part:IsA("BasePart") then
			local box=part:FindFirstChild("HitboxEXP") or Instance.new("BoxHandleAdornment")
			box.Name="HitboxEXP"
			box.Adornee=part
			box.Size=part.Size*hitboxSizeMultiplier
			box.Color3=Color3.fromRGB(255,0,0)
			box.Transparency=0.5
			box.AlwaysOnTop=true
			box.Parent=part
		end
	end
end

local function removeHitboxes(plr)
	if not plr.Character then return end
	for _,v in pairs(plr.Character:GetDescendants()) do
		if v:IsA("BoxHandleAdornment") and v.Name=="HitboxEXP" then v:Destroy() end
	end
end

Players.PlayerAdded:Connect(function(plr)
	plr.CharacterAdded:Connect(function()
		if hitboxEnabled then createHitboxes(plr) end
	end)
end)

-- Kill Aura
local function killAura()
	if not killAuraEnabled then return end
	local tool=character:FindFirstChildOfClass("Tool")
	if not tool then return end
	for _,plr in pairs(Players:GetPlayers()) do
		if plr~=player and plr.Character then
			local hum=plr.Character:FindFirstChildOfClass("Humanoid")
			local root=plr.Character:FindFirstChild("HumanoidRootPart")
			if hum and root and hum.Health>0 and (root.Position-rootPart.Position).Magnitude<=15 then
				hum:TakeDamage(10)
			end
		end
	end
end

RunService.Heartbeat:Connect(function()
	if hitboxEnabled then
		for _,plr in pairs(Players:GetPlayers()) do
			createHitboxes(plr)
		end
	end
	if killAuraEnabled then killAura() end
end)
