--// Serviços
local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Atualiza humanoid sempre que respawnar
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
end)

-- Nome do jogo
local success, gameName = pcall(function()
    return MarketplaceService:GetProductInfo(game.PlaceId).Name
end)
if not success then
    gameName = "Jogo Desconhecido"
end

-- UI - Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = gameName .. " - Tutuz Script",
    SubTitle = "by tutu",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local TabMain = Window:AddTab({ Title = "Main", Icon = "gamepad-2" })
local TabScript = Window:AddTab({ Title = "Scripts", Icon = "code" })

-- Variáveis
local flying, bodyVelocity, flyConnection = false, nil, nil
local noclip, noclipConnection = false, nil
local infiniteJump = false
local espEnabled = false
local hitboxEnabled = false
local killAuraEnabled = false
local hitboxSizeMultiplier = 2.5

--================= Funções =================--

-- Fly
local function startFly()
    if flying or not rootPart then return end
    flying = true
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVelocity.Velocity = Vector3.new()
    bodyVelocity.Parent = rootPart

    flyConnection = RunService.Heartbeat:Connect(function()
        if not flying then return end
        local moveDir = Vector3.new()
        local cam = Workspace.CurrentCamera

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDir += cam.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDir -= cam.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDir -= cam.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDir += cam.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDir += Vector3.new(0,1,0) end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir -= Vector3.new(0,1,0) end

        bodyVelocity.Velocity = (moveDir.Magnitude > 0 and moveDir.Unit * 50) or Vector3.new()
    end)
end

local function stopFly()
    flying = false
    if flyConnection then flyConnection:Disconnect() flyConnection = nil end
    if bodyVelocity then bodyVelocity:Destroy() bodyVelocity = nil end
end

-- NoClip
local function startNoClip()
    if noclip then return end
    noclip = true
    noclipConnection = RunService.Stepped:Connect(function()
        if character then
            for _, v in pairs(character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    end)
end

local function stopNoClip()
    noclip = false
    if noclipConnection then noclipConnection:Disconnect() noclipConnection = nil end
end

-- Infinite Jump
UserInputService.JumpRequest:Connect(function()
    if infiniteJump and humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- TP Tool
local function createTPTool()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "TP Tool"
    tool.Parent = player.Backpack

    tool.Activated:Connect(function()
        local mouse = player:GetMouse()
        if mouse and mouse.Hit then
            character:MoveTo(mouse.Hit.Position)
        end
    end)
end

-- ESP
local function enableESP()
    espEnabled = true
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local root = plr.Character:FindFirstChild("HumanoidRootPart")
            if root then
                local box = Instance.new("BoxHandleAdornment")
                box.Adornee = root
                box.Size = Vector3.new(2,5,2)
                box.Color3 = Color3.fromRGB(0,255,0)
                box.Transparency = 0.5
                box.AlwaysOnTop = true
                box.Name = "ESPBOX"
                box.Parent = root
            end
        end
    end
end

local function disableESP()
    espEnabled = false
    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Character then
            local root = plr.Character:FindFirstChild("HumanoidRootPart")
            if root then
                local box = root:FindFirstChild("ESPBOX")
                if box then box:Destroy() end
            end
        end
    end
end

-- Hitbox
local function updateHitbox(plr)
    if plr == player then return end
    local char = plr.Character
    if not char then return end
    local parts = {"HumanoidRootPart","Head","Torso","UpperTorso","LowerTorso"}
    for _, name in pairs(parts) do
        local part = char:FindFirstChild(name)
        if part and part:IsA("BasePart") then
            if hitboxEnabled then
                local box = part:FindFirstChild("HitboxEXP") or Instance.new("BoxHandleAdornment")
                box.Name = "HitboxEXP"
                box.Adornee = part
                box.Size = part.Size * hitboxSizeMultiplier
                box.Color3 = Color3.fromRGB(255,0,0)
                box.Transparency = 0.5
                box.AlwaysOnTop = true
                box.Parent = part
            else
                local box = part:FindFirstChild("HitboxEXP")
                if box then box:Destroy() end
            end
        end
    end
end

Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function()
        if hitboxEnabled then updateHitbox(plr) end
    end)
end)

-- Kill Aura
local function killAura()
    if not killAuraEnabled then return end
    local tool = character:FindFirstChildOfClass("Tool")
    if not tool then return end
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local hum = plr.Character:FindFirstChildOfClass("Humanoid")
            local root = plr.Character:FindFirstChild("HumanoidRootPart")
            if hum and hum.Health > 0 and root then
                if (root.Position - rootPart.Position).Magnitude <= 15 then
                    hum:TakeDamage(10)
                end
            end
        end
    end
end

-- Heartbeat
RunService.Heartbeat:Connect(function()
    if hitboxEnabled then
        for _, plr in pairs(Players:GetPlayers()) do
            updateHitbox(plr)
        end
    end
    if killAuraEnabled then
        killAura()
    end
end)

--================= UI ===================

-- Fly
TabMain:AddToggle("FlyPCToggle",{Title="Fly PC",Default=false,Callback=function(state) if state then startFly() else stopFly() end end})

-- Speed/Jump
TabMain:AddSlider("SpeedSlider",{Title="Velocidade",Min=16,Max=200,Default=humanoid.WalkSpeed,Callback=function(val) humanoid.WalkSpeed = val end})
TabMain:AddSlider("JumpSlider",{Title="Força do Pulo",Min=50,Max=300,Default=humanoid.JumpPower,Callback=function(val) humanoid.JumpPower = val end})

-- NoClip/InfiniteJump
TabMain:AddToggle("NoClipToggle",{Title="NoClip",Default=false,Callback=function(state) if state then startNoClip() else stopNoClip() end end})
TabMain:AddToggle("InfJumpToggle",{Title="Infinite Jump",Default=false,Callback=function(state) infiniteJump = state end})

-- TP Tool
TabMain:AddButton({Title="TP Tool",Callback=createTPTool})

-- ESP
TabMain:AddToggle("ESPToggle",{Title="ESP",Default=false,Callback=function(state) if state then enableESP() else disableESP() end end})

-- Hitbox
TabMain:AddToggle("HitboxToggle",{Title="Hitbox Expander",Default=false,Callback=function(state) hitboxEnabled=state end})
TabMain:AddSlider("HitboxSlider",{Title="Tamanho Hitbox",Min=1,Max=5,Default=2.5,Callback=function(val) hitboxSizeMultiplier=val end})

-- Kill Aura
TabMain:AddToggle("KillAuraToggle",{Title="Kill Aura",Default=false,Callback=function(state) killAuraEnabled=state end})

-- Scripts
TabScript:AddButton({Title="Infinite Yield",Callback=function() loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))() end})
